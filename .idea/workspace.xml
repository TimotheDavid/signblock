<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e6177eb2-2614-4c94-874a-72e0e3c6822a" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
<<<<<<< HEAD
=======
  <component name="GitToolBoxStore">
    <option name="recentBranches">
      <RecentBranches>
        <option name="branchesForRepo">
          <list>
            <RecentBranchesForRepo>
              <option name="branches">
                <list>
                  <RecentBranch>
                    <option name="branchName" value="dev" />
                    <option name="lastUsedInstant" value="1694023577" />
                  </RecentBranch>
                  <RecentBranch>
                    <option name="branchName" value="main" />
                    <option name="lastUsedInstant" value="1694023576" />
                  </RecentBranch>
                </list>
              </option>
              <option name="repositoryRootUrl" value="file://$PROJECT_DIR$" />
            </RecentBranchesForRepo>
          </list>
        </option>
      </RecentBranches>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
>>>>>>> dev
  <component name="ProjectId" id="2UkXPNChOxQuI83D37ck4DyTr5K" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
<<<<<<< HEAD
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
=======
    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
>>>>>>> dev
    &quot;last_opened_file_path&quot;: &quot;/home/devertry/Bureau/bc_project_dropbox/backend-bcsign&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;/home/devertry/Bureau/bc_project_dropbox/backend-bcsign/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/opt/WebStorm-231.9011.35/plugins/javascript-impl/jsLanguageServicesImpl/external&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
<<<<<<< HEAD
=======
      <recent name="$PROJECT_DIR$" />
>>>>>>> dev
      <recent name="$PROJECT_DIR$/__tests__/externals/web3" />
      <recent name="$PROJECT_DIR$/__tests__" />
      <recent name="$PROJECT_DIR$/src/externals/web3" />
      <recent name="$PROJECT_DIR$/src" />
<<<<<<< HEAD
      <recent name="$PROJECT_DIR$/src/useCase/interface/web3" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.it should send query to the contract.should not query the documents du to CANNOT_SEND_ADDRESS_CONTRACT ">
=======
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker/docker-compose.yaml.vault: Compose Deployment">
>>>>>>> dev
    <configuration name="describe the test for get Hash by contract" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/__tests__/useCase/getHashByContract.spec.ts" />
      <test-names>
        <test-name value="describe the test for get Hash by contract" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="describe the test for get Hash by contract.should get by hash of documents, when the document has input" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/useCase/getHashByContract.spec.ts" />
      <test-names>
        <test-name value="describe the test for get Hash by contract" />
        <test-name value="should get by hash of documents, when the document has input" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="it should send query to the contract.should not query the documents du to CANNOT_SEND_ADDRESS_CONTRACT " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/externals/web3/contracts.spec.ts" />
      <test-names>
        <test-name value="it should send query to the contract" />
        <test-name value="should not query the documents du to CANNOT_SEND_ADDRESS_CONTRACT " />
      </test-names>
      <method v="2" />
    </configuration>
<<<<<<< HEAD
    <configuration name="test users " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/tests/useCase/users.spec.ts" />
      <test-names>
        <test-name value="test users " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="test" type="JavaScriptTestRunnerJest" temporary="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/tests/externals/web3/IniteWeb3.spec.ts" />
      <test-names>
        <test-name value="test web3 init module" />
      </test-names>
      <method v="2" />
    </configuration>
=======
>>>>>>> dev
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="backend-bcsign" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
<<<<<<< HEAD
    <recent_temporary>
      <list>
        <item itemvalue="Jest.it should send query to the contract.should not query the documents du to CANNOT_SEND_ADDRESS_CONTRACT " />
        <item itemvalue="Jest.describe the test for get Hash by contract" />
        <item itemvalue="Jest.describe the test for get Hash by contract.should get by hash of documents, when the document has input" />
        <item itemvalue="Jest.test users " />
        <item itemvalue="Jest.test" />
=======
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker/docker-compose.yaml.vault: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="vault" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="vault " type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker/docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker/docker-compose.yaml.vault: Compose Deployment" />
        <item itemvalue="Docker.vault " />
        <item itemvalue="Jest.it should send query to the contract.should not query the documents du to CANNOT_SEND_ADDRESS_CONTRACT " />
        <item itemvalue="Jest.describe the test for get Hash by contract" />
        <item itemvalue="Jest.describe the test for get Hash by contract.should get by hash of documents, when the document has input" />
>>>>>>> dev
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e6177eb2-2614-4c94-874a-72e0e3c6822a" name="Changes" comment="" />
      <created>1693484526985</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1693484526985</updated>
      <workItem from="1693484528088" duration="3768000" />
      <workItem from="1693488326877" duration="8907000" />
      <workItem from="1693654855165" duration="6460000" />
      <workItem from="1693661329241" duration="8129000" />
      <workItem from="1693690656221" duration="426000" />
      <workItem from="1693691085757" duration="31672000" />
      <workItem from="1693753963116" duration="5356000" />
      <workItem from="1693774130833" duration="5074000" />
      <workItem from="1693860377718" duration="1518000" />
      <workItem from="1693985912117" duration="7000" />
<<<<<<< HEAD
      <workItem from="1694021867914" duration="1366000" />
=======
      <workItem from="1694021867914" duration="4543000" />
>>>>>>> dev
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>